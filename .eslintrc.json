{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "extends": ["plugin:@angular-eslint/recommended", "prettier"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json", "e2e/tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:prettier/recommended"
      ],
      "plugins": ["deprecation", "unicorn", "@type  script-eslint"],
      "rules": {
        // eslint
        "arrow-parens": ["off"],
        "no-console": ["error", { "allow": ["warn", "error"] }],
        "no-empty": ["error", { "allowEmptyCatch": true }],
        "no-multiple-empty-lines": ["error"],
        "no-restricted-imports": ["error", "rxjs/Rx"],
        "no-shadow": ["off"],
        "no-trailing-spaces": ["error"],
        "no-undef": ["off"],
        "no-unused-vars": "off",
        "max-len": [
          "error",
          {
            "code": 140,
            "ignorePattern": "^import [^,]+ from |^export | implements"
          }
        ],
        "quote-props": ["error", "as-needed"],
        "sort-imports": ["off"],

        // typescript-eslint
        "@typescript-eslint/consistent-type-definitions": [
          "error",
          "interface"
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "format": ["PascalCase"],
            "selector": "interface",
            "custom": {
              "regex": "^I[A-Z]",
              "match": true
            }
          }
        ],
        "@typescript-eslint/no-empty-function": [
          "error",
          { "allow": ["arrowFunctions"] }
        ],
        "@typescript-eslint/no-inferrable-types": [
          "error",
          { "ignoreParameters": true }
        ],
        "@typescript-eslint/no-unused-vars": [
          "error",
          { "vars": "local", "args": "none" }
        ],
        "@typescript-eslint/no-non-null-assertion": ["error"],
        "@typescript-eslint/no-shadow": ["error"],
        "@typescript-eslint/no-var-requires": ["error"],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": {
              "memberTypes": [
                "static-field",
                "instance-field",
                "static-method",
                "instance-method"
              ]
            }
          }
        ],

        // angular-eslint
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": ["Component"]
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "prefix": "app",
            "style": "kebab-case",
            "type": "element"
          }
        ],
        "@angular-eslint/contextual-lifecycle": ["error"],
        "@angular-eslint/directive-class-suffix": [
          "error",
          {
            "suffixes": ["Directive"]
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "prefix": "app",
            "style": "camelCase",
            "type": "attribute"
          }
        ],
        "@angular-eslint/no-conflicting-lifecycle": ["error"],
        "@angular-eslint/no-input-rename": ["error"],
        "@angular-eslint/no-inputs-metadata-property": ["error"],
        "@angular-eslint/no-output-native": ["error"],
        "@angular-eslint/no-output-on-prefix": ["error"],
        "@angular-eslint/no-output-rename": ["error"],
        "@angular-eslint/no-outputs-metadata-property": ["error"],
        "@angular-eslint/use-lifecycle-interface": ["error"],
        "@angular-eslint/use-pipe-transform-interface": ["error"],

        // unicorn
        "unicorn/filename-case": ["error"],
        "unicorn/no-unused-properties": "off",

        //deprecation
        "deprecation/deprecation": ["warn"]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {
        "@angular-eslint/template/banana-in-box": "error",
        "@angular-eslint/template/no-negated-async": "error"
      }
    },
    {
      "files": ["*.html"],
      "excludedFiles": ["*inline-template-*.component.html"],
      "extends": ["plugin:prettier/recommended"],
      "rules": {
        "prettier/prettier": ["error", { "parser": "angular" }]
      }
    }
  ]
}
